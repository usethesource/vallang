<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.usethesource</groupId>
	<artifactId>vallang</artifactId>
	<version>1.0.0-RC16-SNAPSHOT</version>
	<packaging>jar</packaging>

    <licenses>
        <license>
            <name>BSD-2-Clause</name>
            <url>https://opensource.org/license/BSD-2-Clause</url>
            <distribution>repo</distribution>
            <!-- we cannot define multiple licenses in this maven block, as it would mean the user can choose either of the licenses -->
            <comments>Note, some older files are still licensed under Eclipse v1</comments>
        </license>
    </licenses>

	<scm>
		<developerConnection>scm:git:ssh://git@github.com/usethesource/vallang.git</developerConnection>
		<tag>v1.0.0-RC14</tag>
	</scm>

	<!-- dependency resolution configuration (usethesource) -->
	<repositories>
		<repository>
			<id>usethesource</id>
			<url>https://releases.usethesource.io/maven/</url>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<checkerframework.version>3.48.3</checkerframework.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
	</properties>

	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.config</include>
				</includes>
			</resource>
		</resources>
		<plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <release>11</release>
                    <compilerArgument>-parameters</compilerArgument> <!-- make sure parameters are compiled by name into the jar -->
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<arguments>-DskipTests</arguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.11.2</version>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.5.2</version>
				<executions>
					<execution>
						<id>test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
					<argLine>
						@{argLine}
						-Xmx2G
						-ea
						-Dvallang.test.seed=${buildNumber}
						-Dvallang.random.partialDateTime=true
						-Dvallang.random.zoneOffsets=true
					</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.12</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.5.0</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
						<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>(3.8,)</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
      <plugin> <!-- needs to be explictily envoked using mvn checkstyle:check -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
        </configuration>
      </plugin>
		</plugins>
	</build>

	<dependencies>
	<dependency>
		<groupId>org.junit.jupiter</groupId>
		<artifactId>junit-jupiter-engine</artifactId>
		<version>5.11.4</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.junit.jupiter</groupId>
		<artifactId>junit-jupiter-params</artifactId>
		<version>5.11.4</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>io.usethesource</groupId>
		<artifactId>capsule</artifactId>
			<version>0.7.1</version>
		</dependency>
		<dependency>
			<groupId>com.github.luben</groupId>
			<artifactId>zstd-jni</artifactId>
			<version>1.5.6-8</version>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
			<version>3.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.checkerframework</groupId>
			<artifactId>checker-qual</artifactId>
			<version>${checkerframework.version}</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile> <!-- run with: mvn clean compile -P checker-framework -->
			<id>checker-framework
			</id> <!-- Slower but safer profile used to look for errors before pushing to SCM -->

			<build>
				<plugins>
					<plugin>
						<!-- This plugin will set properties values using dependency information -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.8.1</version>
						<executions>
							<execution>
								<goals>
									<goal>properties</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.13.0</version>
                                                <configuration>
                                                        <fork>true</fork>
                                                        <release>11</release>
							<compilerArguments>
								<Xmaxerrs>1000</Xmaxerrs>
								<Xmaxwarns>1000</Xmaxwarns>
							</compilerArguments>
							<annotationProcessorPaths>
								<path>
									<groupId>org.checkerframework</groupId>
									<artifactId>checker</artifactId>
									<version>${checkerframework.version}</version>
								</path>
							</annotationProcessorPaths>
							<annotationProcessors>
								<!-- Add all the checkers you want to enable here -->
								<annotationProcessor>
									org.checkerframework.checker.nullness.NullnessChecker
								</annotationProcessor>
							</annotationProcessors>
						</configuration>
					</plugin>
				</plugins>
			</build>

			<dependencies>
				<dependency>
					<groupId>org.checkerframework</groupId>
					<artifactId>checker</artifactId>
					<version>${checkerframework.version}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.checkerframework</groupId>
					<artifactId>jdk8</artifactId>
					<version>3.3.0</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>

		</profile>
	</profiles>
</project>
